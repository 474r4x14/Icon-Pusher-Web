import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'
import Link from "next/link";
// import MyLayout from "../../layouts/MyLayout";
import { useEffect, useState } from 'react'
import { useRouter } from 'next/router'
import Header from "../../components/Header"
import Misc from '@/classes/Misc';

import stream from 'stream';
import { promisify } from 'util';

type componentType = {

}

type appType = {
  name:string,
  slug:string,
  icon:string,
  iconDownload:string,
  version:string,
  packageName:string,
  components:componentType[],
}

const PackageDetails: NextPage = () => {

  const router = useRouter()
  const { packageName } = router.query

    const[appData, setAppData] = useState<appType>({
      name: '',
      slug: '',
      icon: '',
      iconDownload: '',
      version: '',
      packageName: '',
      components: [],
    });


    useEffect(() => {
        fetch(`https://api.iconpusher.com/package/${packageName}`)
        .then(res => res.json())
        .then(data => {
          setAppData(data);
        }).catch((e) => {console.log(e)});
      }, [router.asPath]);



      var appFilterValue = `<!-- ${appData.name} -->\n`;
      var appMapValue = `<!-- ${appData.name} -->\n`;
      var themeResourcesValue = `<!-- ${appData.name} -->\n`;
    //   var test = appData.components
    //   console.log("l",appData.components, test.length);

      if (appData.components != undefined) {
        for (let c = 0; c < appData.components.length; c++) {
            appFilterValue += `<item component="ComponentInfo{${appData.packageName}/${appData.components[c]}}" drawable="${Misc.slug(appData.name,'_')}" />\n\n`
            appMapValue += `<item class="${appData.components[c]}" name=${Misc.slug(appData.name,'_')}/>\n\n`
            themeResourcesValue += `<AppIcon name="${appData.packageName}/${appData.components[c]}" image="${Misc.slug(appData.name,'_')}"/>\n\n`
        }
      }





  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App deets</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1>{appData.name}</h1>
        <p><a href={`https://play.google.com/store/apps/details?id=${appData.packageName}`} target="_blank">Google Play Page</a></p>

        <p className="text-center main-icon">
            <img src={appData.icon} className='inline-block' />
        </p>


        <p className="text-center">
            <a
              href={appData.iconDownload}
            >Download latest app version icon ({appData.version})</a>
        </p>

        <p><strong>appfilter.xml</strong></p>
        <p><textarea className="w-full h-40 p-2" id="appfilter" readOnly={true} value={appFilterValue}></textarea></p>
        <p><button id="copy-appfilter" onClick={()=>copy("appfilter")}>Copy</button></p>


        <p><strong>appmap.xml</strong></p>
        <p><textarea className="w-full h-40 p-2" id="appmap" readOnly value={appMapValue}></textarea></p>
        <p><button id="copy-appmap">Copy</button></p>

        <p><strong>theme_resources.xml</strong></p>
        <p><textarea className="w-full h-40 p-2" id="theme-resources" readOnly value={themeResourcesValue}></textarea></p>
        <p><button id="copy-theme-resources">Copy</button></p>


      </main>

    </div>
  )
}


// This gets called on every request
export async function getServerSideProps() {
    // Fetch data from external API
    const res = await fetch(`https://api.iconpusher.com/search/data`)
    const data = await res.json()

    // Pass data to the page via props
    return { props: { data } }
  }


export default PackageDetails
// PackageDetails.Layout = MyLayout;